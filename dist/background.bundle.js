(()=>{"use strict";var e={};(e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})})(e);const t=new class{constructor(){console.log("ArticleBrowser 初始化开始"),this.initSupabase(),this.isConnected=!1,console.log("ArticleBrowser 初始化完成")}async initSupabase(){try{console.log("开始测试数据库连接");const{data:t,error:o}=await e.supabase.from("articles").select("count").eq("is_deleted",!1);if(o)throw console.error("数据库连接测试失败:",o),o;this.isConnected=!0,console.log("数据库连接成功，文章数量:",t[0].count)}catch(e){this.isConnected=!1,console.error("数据库连接失败:",e)}}async getArticles(t={}){try{let o=e.supabase.from("articles").select("id, title, created_at").eq("is_deleted",!1).order("created_at",{ascending:!1});if(t.today){const e=new Date;e.setHours(0,0,0,0),o=o.gte("created_at",e.toISOString())}else if(t.week){const e=new Date;e.setDate(e.getDate()-7),o=o.gte("created_at",e.toISOString())}const{data:n,error:c}=await o;if(c)throw c;return n}catch(e){return console.error("获取文章失败:",e),[]}}async getArticle(t){try{const{data:o,error:n}=await e.supabase.from("articles").select("*").eq("id",t).single();if(n)throw n;return o}catch(e){return console.error("获取文章详情失败:",e),null}}};async function o(o=3){console.log("开始重试连接");for(let n=0;n<o;n++){try{console.log(`第 ${n+1} 次尝试重新连接`);const{error:o}=await e.supabase.from("articles").select("count");if(!o)return console.log("重新连接成功"),t.isConnected=!0,void chrome.runtime.sendMessage({type:"connectionStatus",connected:!0})}catch(e){console.error(`第 ${n+1} 次重试失败:`,e)}await new Promise((e=>setTimeout(e,1e3*(n+1))))}console.error("达到最大重试次数，连接失败"),t.isConnected=!1,chrome.runtime.sendMessage({type:"connectionStatus",connected:!1})}chrome.runtime.onMessage.addListener(((e,o,n)=>(console.log("收到消息:",e),"getArticles"===e.type?(t.getArticles(e.filter).then(n),!0):"getArticle"===e.type?(t.getArticle(e.id).then(n),!0):"checkConnection"===e.type?(console.log("收到连接检查请求，当前连接状态:",t.isConnected),n({connected:t.isConnected}),!1):void 0))),console.log("开始初始化连接检查"),async function(){try{console.log("开始检查数据库连接");const{data:n,error:c}=await e.supabase.from("articles").select("count");c?(console.error("数据库连接失败，准备重试:",c),t.isConnected=!1,chrome.runtime.sendMessage({type:"connectionStatus",connected:!1}),await o()):(console.log("数据库连接正常"),t.isConnected=!0,chrome.runtime.sendMessage({type:"connectionStatus",connected:!0}))}catch(e){console.error("连接检查失败:",e),t.isConnected=!1,chrome.runtime.sendMessage({type:"connectionStatus",connected:!1}),await o()}}()})();